name: Build and deploy Python app to Azure Container App

env:
  AZURE_WEBAPP_NAME: python-postgres-azure
  PYTHON_VERSION: "3.11"

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linting:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rates
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python version
        uses: actions/setup-python@v3.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt.lock

      - name: Check Formatting and linting
        run: black ./ --check && flake8 --exclude ./venv/

  static-code-analysis:
    runs-on: ubuntu-latest
    needs:
      - linting
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python version
        uses: actions/setup-python@v3.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install bandit

      - name: SAST
        run: bandit -r ./rates -c .bandit.yaml

  dependency-vulnerability-analysis:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rates
    needs:
      - linting
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python version
        uses: actions/setup-python@v3.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install safety

      - name: Safety Check
        run: safety check --file requirements.txt.lock --full-report
